name: Deploy Hugo site and compile and publish resume

on:
  push:
    branches: ["main"]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  compile-resume:
    runs-on: ubuntu-latest
    container: 
      image: texlive/texlive:latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Compile resume
      run: cd resume/ && pdflatex resume.tex
    - name: Upload resume PDF as an artifact
      uses: actions/upload-artifact@v2
      with:
        name: resume
        path: resume/resume.pdf

  hugo-build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.108.0
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass Embedded
        run: sudo snap install dart-sass-embedded
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./public

  hugo-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [hugo-build]
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

  publish-resume:
    environment: 
      name: aws-s3
    runs-on: ubuntu-latest
    needs: [compile-resume]
    steps:      
      - name: Install Minio Client
        run: wget https://dl.min.io/client/mc/release/linux-amd64/mc && chmod +x mc && mv mc /usr/local/bin
      - name: Download resume PDF artifact
        uses: actions/download-artifact@v2
        with:
          name: resume
          path: ./
      - name: Set MC alias
        run: mc alias set aws ${{ secrets.MINIO_ENDPOINT }} ${{ secrets.MINIO_ACCESS_KEY }} ${{ secrets.MINIO_SECRET_KEY }}
      - name: Upload resume PDF to S3
        run: mc cp resume.pdf aws/george-bolmida-resume/george-bolmida-resume.pdf
